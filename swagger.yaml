openapi: 3.0.0
info:
  title: WABToDo-back-end
  version: 1.0.0

paths:
  /api/users/registration/:
    post:
      summary: Registering a user as a client or as a team member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                password:
                  type: string
                isTeamMember:
                  type: boolean
                  default: false
              required:
                - firstName
                - lastName
                - email
                - password

      responses:
        '201':
          description: Redirect the user to the login page
          content:
            application/json:
              example:
                message: "Account successfully created"
        '400':
          description: Stay on the same page
          content:
            application/json:
              example:
                message: "Entered data is not valid"

  /api/users/login/:
    post:
      summary: Create user access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password

      responses:
        '201':
          description: Return access token and redirect to dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: user_json_web_token

        '401':
          description: Stay on the same page
          content:
            application/json:
              example:
                detail: Invalid email or password.

  /api/users/dashboard/:
    get:
      summary: Get orders aka projects list
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication

      responses:
        '200':
          description: List active of projects. If the user has no orders - return an empty list.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    owner:
                      type: string
                    createdAt:
                      type: string
                      format: date

              example:
                - {
                  id: 1,
                  name: project1,
                  owner: John,
                  createdAt: 30-11-2024
                }
                - {
                  id: 2,
                  name: project2,
                  owner: John,
                  createdAt: 13-12-2024
                }

  /api/orders/create/:
    post:
      summary: Creating an order aka a project
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the project
                description:
                  type: string
                  description: Detailed description of the project
                deadline:
                  type: string
                  format: date
                  description: Project deadline in ISO 8601 format (DD-MM-YYYY)
              required:
                - name
                - description
                - deadline
      responses:
        '201':
          description: Order successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  owner:
                    type: integer
                    description: ID of the user who created the order (automatically assigned)
                  name:
                    type: string
                  description:
                    type: string
                  deadline:
                    type: string
                    format: date
                example:
                  id: 42
                  owner: 1
                  name: New Project
                  description: Project description
                  deadline: 2024-12-31

        '403':
          description: User not authorized
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 403
                  message: Login to continue

