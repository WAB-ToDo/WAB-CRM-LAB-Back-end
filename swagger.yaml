openapi: 3.0.0
info:
  title: WABToDo-back-end
  version: 1.0.0

paths:
  /api/users/registration/:
    post:
      summary: Registering a user as a client or as a team member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  uniqueItems: true
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                password:
                  type: string
                password2:
                  type: string
                isTeamMember:
                  type: boolean
                  default: false
                isAdmin:
                  type: boolean
                  default: false
              required:
                - firstName
                - lastName
                - email
                - password
                - password2

              example:
                {
                  username: TheFirstUser,
                  firstName: User,
                  lastName: NotUser,
                  email: theuseremail@gmail.com,
                  phoneNumber: "+1234567890",
                  password: userpassword,
                  password2: userpassword,
                }

      responses:
        '201':
          description: Redirect the user to the login page
          content:
            application/json:
              example:
                message: "Account successfully created"
        '400':
          description: Stay on the same page
          content:
            application/json:
              example:
                message: "Entered data is not valid"

  /api/users/login/:
    post:
      summary: Create user access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password

      responses:
        '201':
          description: Return access token and redirect to dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: user_json_web_token

        '401':
          description: Stay on the same page
          content:
            application/json:
              example:
                detail: Invalid email or password.

  /api/users/dashboard/:
    get:
      summary: Getting the list of user's orders aka projects
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication

      responses:
        '200':
          description: List active of projects. If the user has no orders - return an empty list.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    owner:
                      type: string
                    createdAt:
                      type: string
                      format: date
                    accepted:
                      type: boolean
              example:
                - {
                  id: 1,
                  name: project1,
                  owner: John,
                  createdAt: 2024-11-30,
                  accepted: true
                }
                - {
                  id: 2,
                  name: project2,
                  owner: John,
                  createdAt: 2024-11-30,
                  accepted: true
                }

  /api/orders/create/:
    post:
      summary: Creating an order aka a project
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the project
                description:
                  type: string
                  description: Detailed description of the project
                deadline:
                  type: string
                  format: date
                  description: Project deadline in ISO 8601 format (YYYY-MM-DD)
              required:
                - name
                - description
                - deadline
      responses:
        '201':
          description: Order successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  owner:
                    type: integer
                    description: ID of the user who created the order (automatically assigned)
                  name:
                    type: string
                  description:
                    type: string
                  deadline:
                    type: string
                    format: date
                  createdAt:
                    type: string
                    format: date
                  updatedAt:
                    type: string
                    format: date
                  acceptedAt:
                    type: string
                    format: date
                  accepted:
                    type: boolean
                    default: false
                  team:
                    type: integer
                    description: team ID
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        description:
                          type: string
                        executor:
                          type: string
                          description: Executor name
                        status:
                          type: string
                          default: pending
                        deadline:
                          type: string
                          format: date
                example:
                  id: 42
                  owner: 1
                  name: New Project
                  description: Project description
                  deadline: 2025-11-30
                  createdAt: 2024-11-30
                  updatedAt: null
                  acceptedAt: null
                  accepted: false
                  team: null
                  tasks: null

        '403':
          description: User not authorized
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 403
                  message: Authentication credentials were not provided.

  /api/orders/edit/<id>:
    patch:
      summary: Edit order details
      description: Request for user to change order details himself
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                deadline:
                  type: string
                  format: date

      responses:
        '200':
          description: Status of the updated order
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  deadline:
                    type: string
                    format: date
                  updatedAt:
                    type: string
                    format: date
                    description: Set automatically when a request is sent
                example:
                  id: 1
                  name: New Project Name
                  description: New description
                  deadline: 2026-11-30
                  updatedAt: 2024-11-30
        '400':
          description: Stay on the same page
          content:
            application/json:
              example:
                message: "Entered data is not valid"
        '403':
          description: User not authorized
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 403
                  message: Login to continue

  /api/orders/management/:
    get:
      summary: Get list of incoming orders
      description: The list used by the platform administration to accept orders and assign the team that will fulfill the order
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication

      responses:
        '200':
          description: Return list of new orders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    owner:
                      type: string
                    createdAt:
                      type: string
                      format: date

              example:
                - {
                  id: 1,
                  name: project1,
                  owner: John,
                  createdAt: 2024-11-30
                }
                - {
                  id: 2,
                  name: project2,
                  owner: John,
                  createdAt: 2024-11-30
                }

  /api/orders/management/id:
    patch:
      summary: Management of incoming orders, change the status of an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accepted:
                  type: boolean
                teamId:
                  type: integer
              required:
                - accepted
                - teamId
              example:
                accepted: true
                teamId: 1

      responses:
        '200':
          description: Status of the updated order
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  owner:
                    type: integer
                    description: ID of the user who created the order (automatically assigned)
                  name:
                    type: string
                  description:
                    type: string
                  deadline:
                    type: string
                    format: date
                  accepted:
                    type: boolean
                    default: false
                example:
                  id: 1
                  name: New Project
                  accepted: true
                  acceptedAt: 2024-11-30
                  teamId: 1

  /api/users/teams/create:
    post:
      summary: Creating an team
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                leader:
                  type: integer
                  description: User id
                members:
                  type: array
                  items:
                    type: integer
                  description: List of user IDs to be added to the team
                status:
                  type: string
                  default: available
                  description: Status of the team
              required:
                - leader
                - members
            example:
              leader: 1
              members: [ 2, 3, 4 ]
              status: available

      responses:
        '201':
          description: Team successfully created
          content:
            application/json:
              example:
                team_id: 12
                leader: 1
                members: [ 2, 3, 4 ]
                status: available
        '400':
          description: Bad request
          content:
            application/json:
              example:
                detail: "Invalid input data"
